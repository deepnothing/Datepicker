{"version":3,"sources":["App.js","index.js"],"names":["Datepicker","props","getCurrentDate","date","Date","month","toLocaleString","numericalmonth","getMonth","year","getFullYear","day","getDate","today","toLocaleDateString","setState","getLocalStorage","localStorage","getItem","daysInMonth","calculateDays","date1","state","Difference_In_Days","getTime","Math","round","this","setItem","daysinmonth","selectBox","document","querySelector","textContent","i","newOption","createElement","optionText","createTextNode","appendChild","setAttribute","className","value","onChange","e","target","split","id","type","defaultValue","onInput","length","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4d660e9e.chunk.js","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\n\n\nexport default class Datepicker extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      today: new Date().toLocaleDateString(),\n      month: '',\n      day: '',\n      year: '',\n      numericalmonth: '',\n    }\n  }\n  componentDidMount() {\n\n    if (localStorage === null) {\n      this.getCurrentDate();\n    } else {\n\n      this.getLocalStorage();\n    }\n  }\n\n  getCurrentDate = () => {\n    const date = new Date();\n    const month = date.toLocaleString('default', { month: 'long' });\n    const numericalmonth = date.getMonth() + 1;\n    const year = date.getFullYear();\n    const day = date.getDate();\n    const today = new Date().toLocaleDateString();\n    this.setState({ month: month, year: year, day: day, today: today, numericalmonth: numericalmonth });\n  };\n\n  getLocalStorage = () => {\n    this.setState({\n      month: localStorage.getItem(\"month\"),\n      day: localStorage.getItem(\"day\"),\n      year: localStorage.getItem(\"year\"),\n      numericalmonth: localStorage.getItem(\"numericalmonth\"),\n    })\n  }\n\n  daysInMonth = (month, year) => {\n    return new Date(year, month, 0).getDate();\n  };\n\n  calculateDays = () => {\n    let date1 = new Date(this.state.today);\n    let date2 = new Date(this.state.numericalmonth + '/' + this.state.day + '/' + this.state.year);\n    let Difference_In_Time = date2.getTime() - date1.getTime();\n    let Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);\n    return Math.round(Difference_In_Days)\n  }\n\n  componentDidUpdate() {\n    this.calculateDays();\n\n    localStorage.setItem('year', this.state.year);\n    localStorage.setItem('month', this.state.month);\n    localStorage.setItem('numericalmonth', this.state.numericalmonth);\n    localStorage.setItem('day', this.state.day);\n    localStorage.setItem('today', this.state.today);\n\n\n    let daysinmonth = this.daysInMonth(this.state.numericalmonth, this.state.year);\n\n    let selectBox = document.querySelector('#dayofmonth');\n\n    selectBox.textContent = '';\n\n    for (var i = 0; i < daysinmonth; i++) {\n\n      const newOption = document.createElement('option');\n      const optionText = document.createTextNode([i + 1]);\n\n      newOption.appendChild(optionText);\n\n      newOption.setAttribute('value', [i + 1]);\n\n      selectBox.appendChild(newOption);\n    }\n  };\n\n  render() {\n\n    const {\n      year, month, day, numericalmonth,\n    } = this.state\n\n    return (\n      <div>\n\n        <div className=\"datewrapper\">\n\n          <select value={month + ',' + numericalmonth} onChange={(e) => { this.setState({ month: e.target.value.split(',')[0], numericalmonth: e.target.value.split(',')[1] }) }} >\n\n            <option value=\"January,1\">January</option>\n            <option value=\"February,2\">February</option>\n            <option value=\"March,3\">March</option>\n            <option value=\"April,4\">April</option>\n            <option value=\"May,5\">May</option>\n            <option value=\"June,6\">June</option>\n            <option value=\"July,7\">July</option>\n            <option value=\"August,8\">August</option>\n            <option value=\"September,9\">September</option>\n            <option value=\"October,10\">October</option>\n            <option value=\"November,11\">November</option>\n            <option value=\"December,12\">December</option>\n          </select>\n\n          <select id=\"dayofmonth\" onChange={(e) => { this.setState({ day: e.target.value }) }}></select>\n\n          <input type=\"number\" defaultValue={year} onInput={(e) => { if (e.target.value.length == 4) { this.setState({ year: e.target.value }) } }} ></input>\n\n          <div className=\"output\">{numericalmonth}/{day}/{year} is {this.calculateDays()} days from now </div>\n        </div>\n\n      </div>\n    )\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Datepicker from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Datepicker />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}