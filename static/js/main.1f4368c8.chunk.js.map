{"version":3,"sources":["Datepicker.js","index.js"],"names":["Datepicker","today","Date","todaystring","toLocaleDateString","useState","JSON","parse","localStorage","getItem","getMonth","getDate","getFullYear","mydate","setMydate","daysInMonth","year","month","daysinmontharray","Array","apply","length","map","Number","call","shift","Calculate","Math","round","day","isCalcNegative","sign","isCalcOne","className","id","value","onChange","e","setItem","stringify","target","item","i","style","marginLeft","type","defaultValue","onInput","abs","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAGe,SAASA,IACtB,IAAMC,EAAQ,IAAIC,KAEZC,EAAcF,EAAMG,qBAHS,EAIPC,mBAASC,KAAKC,MAAMC,aAAaC,QAAQ,YAAc,CAAE,MAASR,EAAMS,WAAa,EAAG,IAAOT,EAAMU,UAAW,KAAQV,EAAMW,gBAJvH,mBAI5BC,EAJ4B,KAIpBC,EAJoB,KAM/BC,EAAc,IAAIb,KAAKW,EAAOG,KAAMH,EAAOI,MAAO,GAAGN,UAErDO,EAAmBC,MAAMC,MAAM,KAAM,CAAEC,OAAQN,EAAc,IAAKO,IAAIC,OAAOC,KAAMD,QACvFL,EAAiBO,QAEjB,IAAIC,EAAYC,KAAKC,OAAO,IAAI1B,KAAKW,EAAOI,MAAQ,IAAMJ,EAAOgB,IAAM,IAAMhB,EAAOG,MAAQ,IAAId,KAAKC,IAA1E,OAEvB2B,EAA0C,IAAzBH,KAAKI,KAAKL,IAAkC,IAAdA,EAAqBM,EAAqC,IAAzBL,KAAKI,KAAKL,KAAmC,IAAfA,EAElH,OACE,8BACE,sBAAKO,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UAEE,gCAAK,0CACH,wBAAQA,UAAU,IAAIC,GAAG,QAAQC,MAAOtB,EAAOI,MAAOmB,SAAU,SAACC,GAAQ7B,aAAa8B,QAAQ,SAAUhC,KAAKiC,UAAL,2BAAoB1B,GAApB,IAA4B,MAASwB,EAAEG,OAAOL,UAAWrB,EAAU,2BAAKD,GAAN,IAAc,MAASwB,EAAEG,OAAOL,UAA1M,SAnBQ,CAAC,UAAW,UAAW,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAoBzGb,KAAI,SAACmB,EAAMC,GAAP,OACb,wBAAgBP,MAAOO,EAAI,EAA3B,SAA+BD,GAAlBC,WAInB,gCAAK,uBAAOC,MAAO,CAAEC,WAAY,SAA5B,iBACH,wBAAQX,UAAU,IAAIC,GAAG,MAAMC,MAAOtB,EAAOgB,IAAKO,SAAU,SAACC,GAAQ7B,aAAa8B,QAAQ,SAAUhC,KAAKiC,UAAL,2BAAoB1B,GAApB,IAA4B,IAAOwB,EAAEG,OAAOL,UAAWrB,EAAU,2BAAKD,GAAN,IAAc,IAAOwB,EAAEG,OAAOL,UAAlM,SAEIjB,EAAiBI,KAAI,SAACmB,EAAMC,GAAP,OACnB,wBAAgBP,MAAOM,EAAvB,SAA8BA,GAAjBC,WAKrB,sBAAKR,GAAG,KAAR,UAAa,uBAAOS,MAAO,CAAEC,WAAY,SAA5B,kBACX,uBAAOX,UAAU,IAAIC,GAAG,OAAOW,KAAK,SAASC,aAAcjC,EAAOG,KAAM+B,QAAS,SAACV,GAAYA,EAAEG,OAAOL,MAAQ,SAAU3B,aAAa8B,QAAQ,SAAUhC,KAAKiC,UAAL,2BAAoB1B,GAApB,IAA4B,KAAQc,KAAKqB,IAAIX,EAAEG,OAAOL,WAAYrB,EAAU,2BAAKD,GAAN,IAAc,KAAQc,KAAKqB,IAAIX,EAAEG,OAAOL,oBAG/Q,sBAAKF,UAAU,SAAf,UACGpB,EAAOI,MAAQ,IAAMJ,EAAOgB,IAAM,IAAMhB,EAAOG,KADlD,IAC0Dc,EAAkB,sCAAkB,uCAD9F,IACiHH,KAAKqB,IAAItB,GAD1H,IACwIM,EAAa,uCAAmB,wCADxK,IAC6LF,EAAkB,8CAA0B,+CCvCjPmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnD,EAAD,MAEFoD,SAASC,eAAe,W","file":"static/js/main.1f4368c8.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\nexport default function Datepicker() {\n  const today = new Date();\n  const monthlist = ['January', 'Febuary', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  const todaystring = today.toLocaleDateString();\n  const [mydate, setMydate] = useState(JSON.parse(localStorage.getItem('mydate')) || { 'month': today.getMonth() + 1, 'day': today.getDate(), 'year': today.getFullYear() });\n\n  let daysInMonth = new Date(mydate.year, mydate.month, 0).getDate();\n\n  let daysinmontharray = Array.apply(null, { length: daysInMonth + 1 }).map(Number.call, Number);\n  daysinmontharray.shift();\n\n  let Calculate = Math.round((new Date(mydate.month + '/' + mydate.day + '/' + mydate.year) - new Date(todaystring)) / (1000 * 3600 * 24));\n\n  let isCalcNegative = Math.sign(Calculate) === 1 || Calculate === 0; let isCalcOne = Math.sign(Calculate) === 1 || Calculate === -1\n\n  return (\n    <div>\n      <div className=\"wrapper\">\n        <div className=\"datewrapper\">\n\n          <div><label>Month</label>\n            <select className=\"p\" id=\"month\" value={mydate.month} onChange={(e) => { localStorage.setItem('mydate', JSON.stringify({ ...mydate, 'month': e.target.value })); setMydate({ ...mydate, 'month': e.target.value }) }} >\n              {monthlist.map((item, i) =>\n                <option key={i} value={i + 1}>{item}</option>\n              )}\n            </select></div>\n\n          <div><label style={{ marginLeft: '-15px' }}>Day</label>\n            <select className=\"p\" id=\"day\" value={mydate.day} onChange={(e) => { localStorage.setItem('mydate', JSON.stringify({ ...mydate, 'day': e.target.value })); setMydate({ ...mydate, 'day': e.target.value }) }}>\n              {\n                daysinmontharray.map((item, i) =>\n                  <option key={i} value={item}>{item}</option>\n                )\n              }\n            </select></div>\n\n          <div id=\"yr\"><label style={{ marginLeft: '-20px' }}>Year</label>\n            <input className=\"p\" id=\"year\" type=\"number\" defaultValue={mydate.year} onInput={(e) => { if (e.target.value < 275759) { localStorage.setItem('mydate', JSON.stringify({ ...mydate, 'year': Math.abs(e.target.value) })); setMydate({ ...mydate, 'year': Math.abs(e.target.value) }) } }}></input>\n          </div></div>\n\n        <div className=\"output\">\n          {mydate.month + '/' + mydate.day + '/' + mydate.year} {(isCalcNegative) ? <span>is</span> : <span>was</span>} {Math.abs(Calculate)} {(isCalcOne) ? <span>day</span> : <span>days</span>} {(isCalcNegative) ? <span>from today</span> : <span>ago</span>}</div>\n      </div>\n    </div >\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Datepicker from './Datepicker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Datepicker />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}